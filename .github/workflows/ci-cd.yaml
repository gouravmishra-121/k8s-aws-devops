name: CI/CD - Build, Push to ECR, Deploy to EKS

on:
  push:
    branches: [ main ]

env:
  ECR_REPOSITORY: flask-demo
  AWS_REGION: us-east-1
  K8S_NAMESPACE: demo-app

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build and push Docker image
      id: build-image
      run: |
        IMAGE_TAG=${{ github.sha }}
        echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
        docker build -t $ECR_REPOSITORY:$IMAGE_TAG ./app
        docker tag $ECR_REPOSITORY:$IMAGE_TAG ${{ steps.login-ecr.outputs.registry }}/${ECR_REPOSITORY}:$IMAGE_TAG
        docker push ${{ steps.login-ecr.outputs.registry }}/${ECR_REPOSITORY}:$IMAGE_TAG

    - name: Update k8s manifests with new image
      run: |
        IMAGE_FULL=${{ steps.login-ecr.outputs.registry }}/${ECR_REPOSITORY}:$IMAGE_TAG
        sed -i "s|{{AWS_ACCOUNT_ID}}.dkr.ecr.{{AWS_REGION}}.amazonaws.com/flask-demo:{{IMAGE_TAG}}|${IMAGE_FULL}|g" k8s/deployment.yaml || true
        cat k8s/deployment.yaml

    - name: Install kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: '1.27.3'

    - name: Update Kubeconfig (EKS)
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Update kubeconfig for EKS
      run: |
        aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region ${{ env.AWS_REGION }}

    - name: Deploy to EKS
      run: |
        kubectl apply -f k8s/namespace.yaml
        kubectl apply -f k8s/configmap.yaml -n $K8S_NAMESPACE
        kubectl apply -f k8s/deployment.yaml -n $K8S_NAMESPACE
        kubectl apply -f k8s/service.yaml -n $K8S_NAMESPACE

    - name: Wait for rollout
      run: |
        kubectl -n $K8S_NAMESPACE rollout status deployment/flask-app --timeout=120s

    - name: Post-deploy info
      run: |
        kubectl get pods -n $K8S_NAMESPACE -o wide